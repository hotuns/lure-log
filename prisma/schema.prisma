// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户
model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  phone    String    @unique
  email    String?   @unique
  avatar   String?
  password String
  backpack Backpack?
  combos   Combo[]
  records  Record[]
}

// 背包
model Backpack {
  id           Int           @id @default(autoincrement())
  userId       Int           @unique
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  fishingRods  FishingRod[]
  fishingReels FishingReel[]
}

// 组合
model Combo {
  id            Int         @id @default(autoincrement())
  name          String
  userId        Int
  user          User        @relation(fields: [userId], references: [id])
  fishingRodId  Int
  fishingRod    FishingRod  @relation(fields: [fishingRodId], references: [id])
  fishingReelId Int
  fishingReel   FishingReel @relation(fields: [fishingReelId], references: [id])
  Record        Record[]
}

enum PowerValue {
  UL
  L
  ML
  M
  MH
  H
  XH
}

enum Action {
  ExtraFast
  Fast
  MediumFast
  Medium
  MediumSlow
  Slow
}

// 鱼竿
model FishingRod {
  id         Int        @id @default(autoincrement())
  brand      String
  model      String
  length     Float
  sections   Int
  powerValue PowerValue @default(M)
  action     Action     @default(Medium)
  backpackId Int?
  backpack   Backpack?  @relation(fields: [backpackId], references: [id])
  combos     Combo[]
}

enum Braking {
  NoBraking //无刹车
  SpoolTension //机械刹车（线张力）
  Centrifugal //离心刹车
  Magnetic //磁力刹车
  Electronic //电子刹车
}

enum ReelType {
  Spinning //纺车轮
  Casting // 水滴轮
  Conventional // 鼓轮/传统轮
}

// 卷线器
model FishingReel {
  id         Int       @id @default(autoincrement())
  type       ReelType  @default(Spinning)
  brand      String
  model      String
  weight     Float
  gearRatio  Float
  braking    Braking   @default(SpoolTension)
  backpackId Int?
  backpack   Backpack? @relation(fields: [backpackId], references: [id])
  combos     Combo[]
}

// 记录
model Record {
  id            Int          @id @default(autoincrement())
  userId        Int
  user          User         @relation(fields: [userId], references: [id])
  time          DateTime
  comboId       Int?
  combo         Combo?       @relation(fields: [comboId], references: [id])
  rain          String
  pressure      Float
  windSpeed     Float
  windDirection String
  fishingSpotId Int
  fishingSpot   FishingSpot  @relation(fields: [fishingSpotId], references: [id])
  fishRecords   FishRecord[]
}

// 钓点tags
model FishingSpotTag {
  id  Int    @id
  tag String
}

// 钓点
model FishingSpot {
  id           Int      @id @default(autoincrement())
  coordinates  String // "POINT(40.712776 -74.005974)"
  locationTags String[]
  description  String?
  records      Record[]
}

// 渔获记录
model FishRecord {
  id        Int         @id
  record    Record      @relation(fields: [recordId], references: [id])
  recordId  Int // 添加这个字段以存储 Record 表的外键
  speciesId Int // 添加外键字段指向 FishSpecies 表
  species   FishSpecies @relation(fields: [speciesId], references: [id])
  length    Float
  weight    Float
}

// 鱼种
model FishSpecies {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  imageURL    String?
  records     FishRecord[] // 添加这个字段以反向关联 FishRecord
}
