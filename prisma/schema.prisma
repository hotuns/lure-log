// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户
model User {
  id            Int         @id @default(autoincrement())
  username      String      @unique
  email         String?      @unique
  phone         String     @unique
  password      String
  equipment     Equipment[] 
  records       Record[]
}

// 装备
model Equipment {
  id          Int    @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  brand       String  // 品牌
  model       String  // 型号
  type        String   // "Rod", "Reel", "Bait", etc.
  rodDetail  Rod?       
  reelDetail Reel?      
  baitDetail Bait?      
}

// 鱼竿
model Rod {
  id          Int       @id @default(autoincrement())
  equipmentId Int       @unique
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  length      Float     // 长度
  sections    Int       // 节数
  hardness    String    // 硬度
  tone        String    // 调性
  weight      Float     // 重量
}

// 鱼轮
model Reel {
  id          Int        @id @default(autoincrement())
  equipmentId Int        @unique
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  type        Int    // 类型: 1纺车轮，2两轴轮
  size        Int       // 尺寸
  lineCapacity String   // 容线量
  gearRatio   Float     // 速比
  brakeType   String    // 刹车类型
  weight      Float     // 重量
}

// 鱼饵
model Bait {
  id          Int        @id @default(autoincrement())
  equipmentId Int        @unique
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  type        Int    // 类型 1硬饵  2软饵 
  weight      Float?    // 重量
  detail      String?   // 详细描述
}

// 记录
model Record {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  dateTime    DateTime  // 记录的时间
  geoInfo     GeoInfo?   
  weatherInfo WeatherInfo?
  fishType    String?   // 鱼种类
  baitUsed    String?   // 用饵
  photoUrl    String?   // 图片URL
}

// 地理信息
model GeoInfo {
  id          Int    @id @default(autoincrement())
  recordId    Int    @unique
  record      Record? @relation(fields: [recordId], references: [id])
  location    String    // 位置描述
  obstacles   String?   // 障碍情况
  depth       String?   // 水深
  waterLayer  String?   // 中鱼水层
  current     String?   // 流速
}

// 天气信息
model WeatherInfo {
  id          Int    @id @default(autoincrement())
  recordId    Int    @unique
  record      Record? @relation(fields: [recordId], references: [id])
  pressure    Int?      // 气压
  windDirection String // 风向
  windForce   String    // 风力
  temperature Float    // 温度
  isRaining   Boolean   // 是否下雨
}
